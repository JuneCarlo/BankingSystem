#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BankingSystem
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dbBANK")]
	public partial class DCbankDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblAdmin(tblAdmin instance);
    partial void UpdatetblAdmin(tblAdmin instance);
    partial void DeletetblAdmin(tblAdmin instance);
    partial void InserttblTransaction(tblTransaction instance);
    partial void UpdatetblTransaction(tblTransaction instance);
    partial void DeletetblTransaction(tblTransaction instance);
    partial void InserttblClient(tblClient instance);
    partial void UpdatetblClient(tblClient instance);
    partial void DeletetblClient(tblClient instance);
    #endregion
		
		public DCbankDataContext() : 
				base(global::BankingSystem.Properties.Settings.Default.dbBANKConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DCbankDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DCbankDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DCbankDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DCbankDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblAdmin> tblAdmins
		{
			get
			{
				return this.GetTable<tblAdmin>();
			}
		}
		
		public System.Data.Linq.Table<tblTransaction> tblTransactions
		{
			get
			{
				return this.GetTable<tblTransaction>();
			}
		}
		
		public System.Data.Linq.Table<tblClient> tblClients
		{
			get
			{
				return this.GetTable<tblClient>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_changepass")]
		public int sp_changepass([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string oldpassword, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string newpassword)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username, oldpassword, newpassword);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_ViewAccountID")]
		public ISingleResult<sp_ViewAccountIDResult> sp_ViewAccountID()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_ViewAccountIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_client_deposit")]
		public int sp_client_deposit([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TransacID", DbType="VarChar(30)")] string transacID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CAccountID", DbType="VarChar(30)")] string cAccountID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(16,2)")] System.Nullable<decimal> amount, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CurrentBalance", DbType="Decimal(16,2)")] System.Nullable<decimal> currentBalance, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> date)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), transacID, cAccountID, username, amount, currentBalance, date);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_client_view")]
		public int sp_client_view([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TransacID", DbType="VarChar(30)")] string transacID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CAccountID", DbType="VarChar(30)")] string cAccountID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CurrentBalance", DbType="Decimal(16,2)")] System.Nullable<decimal> currentBalance, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> date)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), transacID, cAccountID, username, currentBalance, date);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_client_withdraw")]
		public int sp_client_withdraw([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TransacID", DbType="VarChar(30)")] string transacID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CAccountID", DbType="VarChar(30)")] string cAccountID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(16,2)")] System.Nullable<decimal> amount, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CurrentBalance", DbType="Decimal(16,2)")] System.Nullable<decimal> currentBalance, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> date)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), transacID, cAccountID, username, amount, currentBalance, date);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_delete_Tran")]
		public int sp_delete_Tran([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CAccountID", DbType="VarChar(30)")] string cAccountID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cAccountID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetClientIDCount")]
		public ISingleResult<sp_GetClientIDCountResult> sp_GetClientIDCount()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_GetClientIDCountResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetTransacIDCount")]
		public ISingleResult<sp_GetTransacIDCountResult> sp_GetTransacIDCount()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_GetTransacIDCountResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_INSERT_admin")]
		public int sp_INSERT_admin([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string secret_question, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string secret_answer)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username, name, password, secret_question, secret_answer);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_insert_client")]
		public int sp_insert_client([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CAccountID", DbType="VarChar(30)")] string cAccountID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string fname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string lname)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cAccountID, fname, lname);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_restart_db")]
		public int sp_restart_db()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_retrieve_user")]
		public ISingleResult<sp_retrieve_userResult> sp_retrieve_user([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string secret_question, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string secret_answer)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username, secret_question, secret_answer);
			return ((ISingleResult<sp_retrieve_userResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_searchT")]
		public ISingleResult<sp_searchTResult> sp_searchT([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string key)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), key);
			return ((ISingleResult<sp_searchTResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_Update_isactive")]
		public int sp_Update_isactive([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string isActive)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username, isActive);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_Update_isNotActive")]
		public int sp_Update_isNotActive([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string isActive)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username, isActive);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_UPDATE_remember")]
		public int sp_UPDATE_remember([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> isRemember)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username, isRemember);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_verifypassword")]
		public ISingleResult<sp_verifypasswordResult> sp_verifypassword([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string password)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), password);
			return ((ISingleResult<sp_verifypasswordResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_verifyusername")]
		public ISingleResult<sp_verifyusernameResult> sp_verifyusername([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string username)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username);
			return ((ISingleResult<sp_verifyusernameResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_verifyusernamepass")]
		public ISingleResult<sp_verifyusernamepassResult> sp_verifyusernamepass([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string password)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username, password);
			return ((ISingleResult<sp_verifyusernamepassResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_view_client")]
		public ISingleResult<sp_view_clientResult> sp_view_client([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CAccountID", DbType="VarChar(30)")] string cAccountID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cAccountID);
			return ((ISingleResult<sp_view_clientResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_view_remember")]
		public ISingleResult<sp_view_rememberResult> sp_view_remember()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_view_rememberResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_view_teller")]
		public ISingleResult<sp_view_tellerResult> sp_view_teller()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_view_tellerResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_view_transactions")]
		public ISingleResult<sp_view_transactionsResult> sp_view_transactions()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_view_transactionsResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAdmin")]
	public partial class tblAdmin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _username;
		
		private string _name;
		
		private string _password;
		
		private string _secret_question;
		
		private string _secret_answer;
		
		private string _usertype;
		
		private string _isactive;
		
		private System.Nullable<bool> _isRemember;
		
		private EntitySet<tblTransaction> _tblTransactions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void Onsecret_questionChanging(string value);
    partial void Onsecret_questionChanged();
    partial void Onsecret_answerChanging(string value);
    partial void Onsecret_answerChanged();
    partial void OnusertypeChanging(string value);
    partial void OnusertypeChanged();
    partial void OnisactiveChanging(string value);
    partial void OnisactiveChanged();
    partial void OnisRememberChanging(System.Nullable<bool> value);
    partial void OnisRememberChanged();
    #endregion
		
		public tblAdmin()
		{
			this._tblTransactions = new EntitySet<tblTransaction>(new Action<tblTransaction>(this.attach_tblTransactions), new Action<tblTransaction>(this.detach_tblTransactions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(30)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secret_question", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string secret_question
		{
			get
			{
				return this._secret_question;
			}
			set
			{
				if ((this._secret_question != value))
				{
					this.Onsecret_questionChanging(value);
					this.SendPropertyChanging();
					this._secret_question = value;
					this.SendPropertyChanged("secret_question");
					this.Onsecret_questionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secret_answer", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string secret_answer
		{
			get
			{
				return this._secret_answer;
			}
			set
			{
				if ((this._secret_answer != value))
				{
					this.Onsecret_answerChanging(value);
					this.SendPropertyChanging();
					this._secret_answer = value;
					this.SendPropertyChanged("secret_answer");
					this.Onsecret_answerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usertype", DbType="NVarChar(MAX)")]
		public string usertype
		{
			get
			{
				return this._usertype;
			}
			set
			{
				if ((this._usertype != value))
				{
					this.OnusertypeChanging(value);
					this.SendPropertyChanging();
					this._usertype = value;
					this.SendPropertyChanged("usertype");
					this.OnusertypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isactive", DbType="NVarChar(MAX)")]
		public string isactive
		{
			get
			{
				return this._isactive;
			}
			set
			{
				if ((this._isactive != value))
				{
					this.OnisactiveChanging(value);
					this.SendPropertyChanging();
					this._isactive = value;
					this.SendPropertyChanged("isactive");
					this.OnisactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isRemember", DbType="Bit")]
		public System.Nullable<bool> isRemember
		{
			get
			{
				return this._isRemember;
			}
			set
			{
				if ((this._isRemember != value))
				{
					this.OnisRememberChanging(value);
					this.SendPropertyChanging();
					this._isRemember = value;
					this.SendPropertyChanged("isRemember");
					this.OnisRememberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblAdmin_tblTransaction", Storage="_tblTransactions", ThisKey="username", OtherKey="username")]
		public EntitySet<tblTransaction> tblTransactions
		{
			get
			{
				return this._tblTransactions;
			}
			set
			{
				this._tblTransactions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblTransactions(tblTransaction entity)
		{
			this.SendPropertyChanging();
			entity.tblAdmin = this;
		}
		
		private void detach_tblTransactions(tblTransaction entity)
		{
			this.SendPropertyChanging();
			entity.tblAdmin = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblTransactions")]
	public partial class tblTransaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TransacID;
		
		private string _CAccountID;
		
		private string _username;
		
		private System.DateTime _date;
		
		private string _transacStatus;
		
		private System.Nullable<decimal> _amount;
		
		private decimal _balance;
		
		private EntityRef<tblAdmin> _tblAdmin;
		
		private EntityRef<tblClient> _tblClient;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransacIDChanging(string value);
    partial void OnTransacIDChanged();
    partial void OnCAccountIDChanging(string value);
    partial void OnCAccountIDChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OntransacStatusChanging(string value);
    partial void OntransacStatusChanged();
    partial void OnamountChanging(System.Nullable<decimal> value);
    partial void OnamountChanged();
    partial void OnbalanceChanging(decimal value);
    partial void OnbalanceChanged();
    #endregion
		
		public tblTransaction()
		{
			this._tblAdmin = default(EntityRef<tblAdmin>);
			this._tblClient = default(EntityRef<tblClient>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransacID", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TransacID
		{
			get
			{
				return this._TransacID;
			}
			set
			{
				if ((this._TransacID != value))
				{
					this.OnTransacIDChanging(value);
					this.SendPropertyChanging();
					this._TransacID = value;
					this.SendPropertyChanged("TransacID");
					this.OnTransacIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAccountID", DbType="VarChar(30)")]
		public string CAccountID
		{
			get
			{
				return this._CAccountID;
			}
			set
			{
				if ((this._CAccountID != value))
				{
					if (this._tblClient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCAccountIDChanging(value);
					this.SendPropertyChanging();
					this._CAccountID = value;
					this.SendPropertyChanged("CAccountID");
					this.OnCAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(30)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					if (this._tblAdmin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transacStatus", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string transacStatus
		{
			get
			{
				return this._transacStatus;
			}
			set
			{
				if ((this._transacStatus != value))
				{
					this.OntransacStatusChanging(value);
					this.SendPropertyChanging();
					this._transacStatus = value;
					this.SendPropertyChanged("transacStatus");
					this.OntransacStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Decimal(16,2)")]
		public System.Nullable<decimal> amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_balance", DbType="Decimal(16,2) NOT NULL")]
		public decimal balance
		{
			get
			{
				return this._balance;
			}
			set
			{
				if ((this._balance != value))
				{
					this.OnbalanceChanging(value);
					this.SendPropertyChanging();
					this._balance = value;
					this.SendPropertyChanged("balance");
					this.OnbalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblAdmin_tblTransaction", Storage="_tblAdmin", ThisKey="username", OtherKey="username", IsForeignKey=true)]
		public tblAdmin tblAdmin
		{
			get
			{
				return this._tblAdmin.Entity;
			}
			set
			{
				tblAdmin previousValue = this._tblAdmin.Entity;
				if (((previousValue != value) 
							|| (this._tblAdmin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblAdmin.Entity = null;
						previousValue.tblTransactions.Remove(this);
					}
					this._tblAdmin.Entity = value;
					if ((value != null))
					{
						value.tblTransactions.Add(this);
						this._username = value.username;
					}
					else
					{
						this._username = default(string);
					}
					this.SendPropertyChanged("tblAdmin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblClient_tblTransaction", Storage="_tblClient", ThisKey="CAccountID", OtherKey="CAccountID", IsForeignKey=true)]
		public tblClient tblClient
		{
			get
			{
				return this._tblClient.Entity;
			}
			set
			{
				tblClient previousValue = this._tblClient.Entity;
				if (((previousValue != value) 
							|| (this._tblClient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblClient.Entity = null;
						previousValue.tblTransactions.Remove(this);
					}
					this._tblClient.Entity = value;
					if ((value != null))
					{
						value.tblTransactions.Add(this);
						this._CAccountID = value.CAccountID;
					}
					else
					{
						this._CAccountID = default(string);
					}
					this.SendPropertyChanged("tblClient");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblClient")]
	public partial class tblClient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CAccountID;
		
		private string _fname;
		
		private string _lname;
		
		private System.Nullable<decimal> _CurrentBalance;
		
		private string _isActive;
		
		private EntitySet<tblTransaction> _tblTransactions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCAccountIDChanging(string value);
    partial void OnCAccountIDChanged();
    partial void OnfnameChanging(string value);
    partial void OnfnameChanged();
    partial void OnlnameChanging(string value);
    partial void OnlnameChanged();
    partial void OnCurrentBalanceChanging(System.Nullable<decimal> value);
    partial void OnCurrentBalanceChanged();
    partial void OnisActiveChanging(string value);
    partial void OnisActiveChanged();
    #endregion
		
		public tblClient()
		{
			this._tblTransactions = new EntitySet<tblTransaction>(new Action<tblTransaction>(this.attach_tblTransactions), new Action<tblTransaction>(this.detach_tblTransactions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAccountID", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CAccountID
		{
			get
			{
				return this._CAccountID;
			}
			set
			{
				if ((this._CAccountID != value))
				{
					this.OnCAccountIDChanging(value);
					this.SendPropertyChanging();
					this._CAccountID = value;
					this.SendPropertyChanged("CAccountID");
					this.OnCAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fname", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string fname
		{
			get
			{
				return this._fname;
			}
			set
			{
				if ((this._fname != value))
				{
					this.OnfnameChanging(value);
					this.SendPropertyChanging();
					this._fname = value;
					this.SendPropertyChanged("fname");
					this.OnfnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lname", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string lname
		{
			get
			{
				return this._lname;
			}
			set
			{
				if ((this._lname != value))
				{
					this.OnlnameChanging(value);
					this.SendPropertyChanging();
					this._lname = value;
					this.SendPropertyChanged("lname");
					this.OnlnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentBalance", DbType="Decimal(16,2)")]
		public System.Nullable<decimal> CurrentBalance
		{
			get
			{
				return this._CurrentBalance;
			}
			set
			{
				if ((this._CurrentBalance != value))
				{
					this.OnCurrentBalanceChanging(value);
					this.SendPropertyChanging();
					this._CurrentBalance = value;
					this.SendPropertyChanged("CurrentBalance");
					this.OnCurrentBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isActive", DbType="NVarChar(MAX)")]
		public string isActive
		{
			get
			{
				return this._isActive;
			}
			set
			{
				if ((this._isActive != value))
				{
					this.OnisActiveChanging(value);
					this.SendPropertyChanging();
					this._isActive = value;
					this.SendPropertyChanged("isActive");
					this.OnisActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblClient_tblTransaction", Storage="_tblTransactions", ThisKey="CAccountID", OtherKey="CAccountID")]
		public EntitySet<tblTransaction> tblTransactions
		{
			get
			{
				return this._tblTransactions;
			}
			set
			{
				this._tblTransactions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblTransactions(tblTransaction entity)
		{
			this.SendPropertyChanging();
			entity.tblClient = this;
		}
		
		private void detach_tblTransactions(tblTransaction entity)
		{
			this.SendPropertyChanging();
			entity.tblClient = null;
		}
	}
	
	public partial class sp_ViewAccountIDResult
	{
		
		private string _CAccountID;
		
		public sp_ViewAccountIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAccountID", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string CAccountID
		{
			get
			{
				return this._CAccountID;
			}
			set
			{
				if ((this._CAccountID != value))
				{
					this._CAccountID = value;
				}
			}
		}
	}
	
	public partial class sp_GetClientIDCountResult
	{
		
		private System.Nullable<int> _Count;
		
		public sp_GetClientIDCountResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
	}
	
	public partial class sp_GetTransacIDCountResult
	{
		
		private System.Nullable<int> _Count1;
		
		public sp_GetTransacIDCountResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count1", DbType="Int")]
		public System.Nullable<int> Count1
		{
			get
			{
				return this._Count1;
			}
			set
			{
				if ((this._Count1 != value))
				{
					this._Count1 = value;
				}
			}
		}
	}
	
	public partial class sp_retrieve_userResult
	{
		
		private string _username;
		
		private string _name;
		
		private string _password;
		
		private string _secret_question;
		
		private string _secret_answer;
		
		private string _usertype;
		
		private string _isactive;
		
		private System.Nullable<bool> _isRemember;
		
		public sp_retrieve_userResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this._username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(30)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this._password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secret_question", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string secret_question
		{
			get
			{
				return this._secret_question;
			}
			set
			{
				if ((this._secret_question != value))
				{
					this._secret_question = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secret_answer", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string secret_answer
		{
			get
			{
				return this._secret_answer;
			}
			set
			{
				if ((this._secret_answer != value))
				{
					this._secret_answer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usertype", DbType="NVarChar(MAX)")]
		public string usertype
		{
			get
			{
				return this._usertype;
			}
			set
			{
				if ((this._usertype != value))
				{
					this._usertype = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isactive", DbType="NVarChar(MAX)")]
		public string isactive
		{
			get
			{
				return this._isactive;
			}
			set
			{
				if ((this._isactive != value))
				{
					this._isactive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isRemember", DbType="Bit")]
		public System.Nullable<bool> isRemember
		{
			get
			{
				return this._isRemember;
			}
			set
			{
				if ((this._isRemember != value))
				{
					this._isRemember = value;
				}
			}
		}
	}
	
	public partial class sp_searchTResult
	{
		
		private string _TransacID;
		
		private string _CAccountID;
		
		private string _username;
		
		private System.DateTime _date;
		
		private string _transacStatus;
		
		private System.Nullable<decimal> _amount;
		
		private decimal _balance;
		
		public sp_searchTResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransacID", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string TransacID
		{
			get
			{
				return this._TransacID;
			}
			set
			{
				if ((this._TransacID != value))
				{
					this._TransacID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAccountID", DbType="VarChar(30)")]
		public string CAccountID
		{
			get
			{
				return this._CAccountID;
			}
			set
			{
				if ((this._CAccountID != value))
				{
					this._CAccountID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(30)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this._username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this._date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transacStatus", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string transacStatus
		{
			get
			{
				return this._transacStatus;
			}
			set
			{
				if ((this._transacStatus != value))
				{
					this._transacStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Decimal(16,2)")]
		public System.Nullable<decimal> amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this._amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_balance", DbType="Decimal(16,2) NOT NULL")]
		public decimal balance
		{
			get
			{
				return this._balance;
			}
			set
			{
				if ((this._balance != value))
				{
					this._balance = value;
				}
			}
		}
	}
	
	public partial class sp_verifypasswordResult
	{
		
		private string _username;
		
		private string _name;
		
		private string _password;
		
		private string _secret_question;
		
		private string _secret_answer;
		
		private string _usertype;
		
		private string _isactive;
		
		private System.Nullable<bool> _isRemember;
		
		public sp_verifypasswordResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this._username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(30)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this._password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secret_question", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string secret_question
		{
			get
			{
				return this._secret_question;
			}
			set
			{
				if ((this._secret_question != value))
				{
					this._secret_question = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secret_answer", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string secret_answer
		{
			get
			{
				return this._secret_answer;
			}
			set
			{
				if ((this._secret_answer != value))
				{
					this._secret_answer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usertype", DbType="NVarChar(MAX)")]
		public string usertype
		{
			get
			{
				return this._usertype;
			}
			set
			{
				if ((this._usertype != value))
				{
					this._usertype = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isactive", DbType="NVarChar(MAX)")]
		public string isactive
		{
			get
			{
				return this._isactive;
			}
			set
			{
				if ((this._isactive != value))
				{
					this._isactive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isRemember", DbType="Bit")]
		public System.Nullable<bool> isRemember
		{
			get
			{
				return this._isRemember;
			}
			set
			{
				if ((this._isRemember != value))
				{
					this._isRemember = value;
				}
			}
		}
	}
	
	public partial class sp_verifyusernameResult
	{
		
		private string _username;
		
		private string _name;
		
		private string _password;
		
		private string _secret_question;
		
		private string _secret_answer;
		
		private string _usertype;
		
		private string _isactive;
		
		private System.Nullable<bool> _isRemember;
		
		public sp_verifyusernameResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this._username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(30)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this._password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secret_question", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string secret_question
		{
			get
			{
				return this._secret_question;
			}
			set
			{
				if ((this._secret_question != value))
				{
					this._secret_question = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secret_answer", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string secret_answer
		{
			get
			{
				return this._secret_answer;
			}
			set
			{
				if ((this._secret_answer != value))
				{
					this._secret_answer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usertype", DbType="NVarChar(MAX)")]
		public string usertype
		{
			get
			{
				return this._usertype;
			}
			set
			{
				if ((this._usertype != value))
				{
					this._usertype = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isactive", DbType="NVarChar(MAX)")]
		public string isactive
		{
			get
			{
				return this._isactive;
			}
			set
			{
				if ((this._isactive != value))
				{
					this._isactive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isRemember", DbType="Bit")]
		public System.Nullable<bool> isRemember
		{
			get
			{
				return this._isRemember;
			}
			set
			{
				if ((this._isRemember != value))
				{
					this._isRemember = value;
				}
			}
		}
	}
	
	public partial class sp_verifyusernamepassResult
	{
		
		private string _username;
		
		private string _name;
		
		private string _password;
		
		private string _secret_question;
		
		private string _secret_answer;
		
		private string _usertype;
		
		private string _isactive;
		
		private System.Nullable<bool> _isRemember;
		
		public sp_verifyusernamepassResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this._username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(30)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this._password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secret_question", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string secret_question
		{
			get
			{
				return this._secret_question;
			}
			set
			{
				if ((this._secret_question != value))
				{
					this._secret_question = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secret_answer", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string secret_answer
		{
			get
			{
				return this._secret_answer;
			}
			set
			{
				if ((this._secret_answer != value))
				{
					this._secret_answer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usertype", DbType="NVarChar(MAX)")]
		public string usertype
		{
			get
			{
				return this._usertype;
			}
			set
			{
				if ((this._usertype != value))
				{
					this._usertype = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isactive", DbType="NVarChar(MAX)")]
		public string isactive
		{
			get
			{
				return this._isactive;
			}
			set
			{
				if ((this._isactive != value))
				{
					this._isactive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isRemember", DbType="Bit")]
		public System.Nullable<bool> isRemember
		{
			get
			{
				return this._isRemember;
			}
			set
			{
				if ((this._isRemember != value))
				{
					this._isRemember = value;
				}
			}
		}
	}
	
	public partial class sp_view_clientResult
	{
		
		private string _CAccountID;
		
		private string _fname;
		
		private string _lname;
		
		private System.Nullable<decimal> _CurrentBalance;
		
		private string _isActive;
		
		public sp_view_clientResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAccountID", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string CAccountID
		{
			get
			{
				return this._CAccountID;
			}
			set
			{
				if ((this._CAccountID != value))
				{
					this._CAccountID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fname", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string fname
		{
			get
			{
				return this._fname;
			}
			set
			{
				if ((this._fname != value))
				{
					this._fname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lname", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string lname
		{
			get
			{
				return this._lname;
			}
			set
			{
				if ((this._lname != value))
				{
					this._lname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentBalance", DbType="Decimal(16,2)")]
		public System.Nullable<decimal> CurrentBalance
		{
			get
			{
				return this._CurrentBalance;
			}
			set
			{
				if ((this._CurrentBalance != value))
				{
					this._CurrentBalance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isActive", DbType="NVarChar(MAX)")]
		public string isActive
		{
			get
			{
				return this._isActive;
			}
			set
			{
				if ((this._isActive != value))
				{
					this._isActive = value;
				}
			}
		}
	}
	
	public partial class sp_view_rememberResult
	{
		
		private string _username;
		
		private string _name;
		
		private string _password;
		
		private string _secret_question;
		
		private string _secret_answer;
		
		private string _usertype;
		
		private string _isactive;
		
		private System.Nullable<bool> _isRemember;
		
		public sp_view_rememberResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this._username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(30)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this._password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secret_question", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string secret_question
		{
			get
			{
				return this._secret_question;
			}
			set
			{
				if ((this._secret_question != value))
				{
					this._secret_question = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secret_answer", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string secret_answer
		{
			get
			{
				return this._secret_answer;
			}
			set
			{
				if ((this._secret_answer != value))
				{
					this._secret_answer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usertype", DbType="NVarChar(MAX)")]
		public string usertype
		{
			get
			{
				return this._usertype;
			}
			set
			{
				if ((this._usertype != value))
				{
					this._usertype = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isactive", DbType="NVarChar(MAX)")]
		public string isactive
		{
			get
			{
				return this._isactive;
			}
			set
			{
				if ((this._isactive != value))
				{
					this._isactive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isRemember", DbType="Bit")]
		public System.Nullable<bool> isRemember
		{
			get
			{
				return this._isRemember;
			}
			set
			{
				if ((this._isRemember != value))
				{
					this._isRemember = value;
				}
			}
		}
	}
	
	public partial class sp_view_tellerResult
	{
		
		private string _AdminName;
		
		private string _Username;
		
		private string _Isactive;
		
		public sp_view_tellerResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminName", DbType="VarChar(30)")]
		public string AdminName
		{
			get
			{
				return this._AdminName;
			}
			set
			{
				if ((this._AdminName != value))
				{
					this._AdminName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this._Username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Isactive", DbType="NVarChar(MAX)")]
		public string Isactive
		{
			get
			{
				return this._Isactive;
			}
			set
			{
				if ((this._Isactive != value))
				{
					this._Isactive = value;
				}
			}
		}
	}
	
	public partial class sp_view_transactionsResult
	{
		
		private string _TransacID;
		
		private string _CAccountID;
		
		private System.DateTime _Date;
		
		private string _username;
		
		private System.Nullable<decimal> _Amount;
		
		private decimal _Balance;
		
		private string _transacStatus;
		
		public sp_view_transactionsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransacID", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string TransacID
		{
			get
			{
				return this._TransacID;
			}
			set
			{
				if ((this._TransacID != value))
				{
					this._TransacID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAccountID", DbType="VarChar(30)")]
		public string CAccountID
		{
			get
			{
				return this._CAccountID;
			}
			set
			{
				if ((this._CAccountID != value))
				{
					this._CAccountID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(30)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this._username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(16,2)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Decimal(16,2) NOT NULL")]
		public decimal Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this._Balance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transacStatus", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string transacStatus
		{
			get
			{
				return this._transacStatus;
			}
			set
			{
				if ((this._transacStatus != value))
				{
					this._transacStatus = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
